overwrite: true
hooks:
  afterAllFileWrite:
    #    - yarn eslint --fix
    - yarn prettier --write

# If you're in the bind of not being able to run the app because of a codegen error
# but you can't run codegen because you can't run the app - uncomment this, run codegen and comment it back
# schema: schema.graphql
schema: http://127.0.0.1:4000/api/graphql

config:
  scalars:
    # uuid: string
    JSON: Record<string, any>
    JSONObject: Record<string, any>
    DateTime: string
    Int64: number
    _Any: any
    Void: void

generates:
  schema.graphql:
    plugins:
      - schema-ast

  # Generate Typescript types to be imported by other generators
  libs/shared/abstract/codegen/src/types.api.graphql.gen.ts:
    documents:
      - '{apps,libs}/**/*.graphql'
    plugins:
      - typescript
      # We want to generate another copy in `shared` folder so our interfaces can access this
      # This will be a duplicate copy of operation types from the `near-operation-file` plugin
      - typescript-operations
    #      - typed-document-node
    config:
      #      constEnums: true
      inlineFragmentTypes: combine
      # enumsAsTypes: true
      namingConvention:
        enumValues: keep
  #        dedupeFragments: true

  # This somehow generates for web-e2e as well, even if ./libs
  ./:
    documents:
      - '**/*.{endpoints,fragment}.graphql'
    preset: near-operation-file
    presetConfig:
      extension: .graphql.gen.ts
      baseTypesPath: ~@codelab/shared/abstract/codegen
      # This forces us to export fragment types, we want to export our own DTO naming instead
      # importAllFragmentsFrom: ~@codelab/frontend/abstract/core
    plugins:
      - typescript-operations
      - typescript-graphql-request
    config:
      inlineFragmentTypes: combine
      # documentVariableSuffix: Gql
      # We want to parse to ASTNode
      gqlImport: 'graphql-tag#gql'
      # gqlImport: 'graphql-request#gql'
      skipTypename: true
      strictScalars: true
      defaultScalarType: unknown
#      dedupeFragments: true
